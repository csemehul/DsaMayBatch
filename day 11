Let's do a dry run of the `checkRecord` function with `n = 2` to see how the solution works step by step.

### Initialization:

- `n = 2`
- `dp` array is initialized to `-1`.

### Recursive Calls:

We start with `solve(2, 0, 0)`.

1. **First Call: `solve(2, 0, 0)`**
   - `a = 0`, `l = 0`
   - Three recursive calls are made:
     1. `solve(1, 0, 0)` for 'P'
     2. `solve(1, 1, 0)` for 'A'
     3. `solve(1, 0, 1)` for 'L'

2. **Second Call: `solve(1, 0, 0)`**
   - `a = 0`, `l = 0`
   - Three recursive calls are made:
     1. `solve(0, 0, 0)` for 'P'
     2. `solve(0, 1, 0)` for 'A'
     3. `solve(0, 0, 1)` for 'L'

3. **Base Case Calls:**
   - `solve(0, 0, 0)` returns 1 (base case)
   - `solve(0, 1, 0)` returns 1 (base case)
   - `solve(0, 0, 1)` returns 1 (base case)

4. **Combining Results for `solve(1, 0, 0)`**
   - Result: `1 (P) + 1 (A) + 1 (L) = 3`
   - `dp[1][0][0] = 3`

5. **Second Call: `solve(1, 1, 0)`**
   - `a = 1`, `l = 0`
   - Three recursive calls are made:
     1. `solve(0, 1, 0)` for 'P'
     2. `solve(0, 2, 0)` for 'A' (returns 0 because `a == 2`)
     3. `solve(0, 1, 1)` for 'L'

6. **Base Case Calls:**
   - `solve(0, 1, 0)` returns 1 (base case)
   - `solve(0, 2, 0)` returns 0 (invalid, 2 'A's)
   - `solve(0, 1, 1)` returns 1 (base case)

7. **Combining Results for `solve(1, 1, 0)`**
   - Result: `1 (P) + 0 (A) + 1 (L) = 2`
   - `dp[1][1][0] = 2`

8. **Second Call: `solve(1, 0, 1)`**
   - `a = 0`, `l = 1`
   - Three recursive calls are made:
     1. `solve(0, 0, 0)` for 'P'
     2. `solve(0, 1, 0)` for 'A'
     3. `solve(0, 0, 2)` for 'L'

9. **Base Case Calls:**
   - `solve(0, 0, 0)` returns 1 (base case)
   - `solve(0, 1, 0)` returns 1 (base case)
   - `solve(0, 0, 2)` returns 1 (base case)

10. **Combining Results for `solve(1, 0, 1)`**
    - Result: `1 (P) + 1 (A) + 1 (L) = 3`
    - `dp[1][0][1] = 3`

11. **Combining Results for `solve(2, 0, 0)`**
    - Result: `3 (P) + 2 (A) + 3 (L) = 8`
    - `dp[2][0][0] = 8`

### Final Result:

- The `checkRecord(2)` call returns `8`, which means there are 8 valid attendance records of length 2.

These records are:
- "PP", "PA", "PL", "AP", "AL", "LP", "LL", "PL" (not necessarily in this order, but these are the valid sequences).
