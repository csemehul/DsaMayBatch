#include <vector>
#include <algorithm>
#include <climits>
using namespace std;

class Solution {
public:
    vector<int> getMinMax(vector<int> arr) {
        int maxi = INT_MIN, mini = INT_MAX;
        for(auto it: arr) {
            maxi = max(maxi, it);
            mini = min(mini, it);
        }
        return {mini, maxi};
    }

    bool canPlaceBalls(vector<int>& position, int balls, int minDist) {
        int count = 1;  // Place the first ball
        int last_position = position[0];  // The position of the last placed ball

        for (int i = 1; i < position.size(); i++) {
            if (position[i] - last_position >= minDist) {
                count++;
                last_position = position[i];
            }
            if (count >= balls) return true;  // If we have placed all balls
        }

        return false;
    }

    int maxDistance(vector<int>& position, int m) {
        sort(position.begin(), position.end());
        
        int low = 1;  // Minimum possible distance
        int high = position.back() - position.front();  // Maximum possible distance

        int ans = 0;
        while (low <= high) {
            int mid = low + (high - low) / 2;

            if (canPlaceBalls(position, m, mid)) {
                ans = mid;  // mid is a valid answer, try for a bigger distance
                low = mid + 1;
            } else {
                high = mid - 1;  // mid is not valid, try for a smaller distance
            }
        }

        return ans;
    }
};
