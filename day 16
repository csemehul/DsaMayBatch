class Solution {
public:
    vector<int> singleNumber(vector<int>& nums) {
        // Step 1: Find XOR of all elements
        int xorSum = 0;
        for (int num : nums) {
            xorSum ^= num;
        }
        
        // Step 2: Find a bit that is set in xorSum (i.e., the rightmost set bit)
        int rightmostSetBit = xorSum & (-xorSum);
        
        // Step 3: Divide numbers into two groups and XOR separately
        int num1 = 0, num2 = 0;
        for (int num : nums) {
            if (num & rightmostSetBit) {
                num1 ^= num;
            } else {
                num2 ^= num;
            }
        }
        
        return {num1, num2};
    }
};
